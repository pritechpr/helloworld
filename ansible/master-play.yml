---
- hosts: VPS
  remote_user: root
  vars:
    pip_install_packages:
      - name: docker
      - name: docker-compose
    nginx_http_template_enable: true
    nginx_http_template:
      default:
        template_file: http/default.conf.j2
        conf_file_name: default.conf
        conf_file_location: /etc/nginx/conf.d/
        port: 80
        server_name: localhost
        error_page: /usr/share/nginx/html
        autoindex: false
        reverse_proxy:
          locations:
            frontend:
              location: /
              proxy_pass: http://frontend_react
        upstreams:
          upstream_1:
            name: frontend_react
            lb_method: least_conn
            zone_name: frontend
            zone_size: 64k
            sticky_cookie: false
            servers:
              frontend_server_1:
                address: localhost
                port: 3000
                weight: 1
                health_check: max_fails=3 fail_timeout=5s
  roles:
      - geerlingguy.pip
      - docker
      - nginxinc.nginx
  tasks:
        - name: Install git
          package:
            name: git
            state: latest

        - name: Clone git repository
          git: >
            dest=/opt/itrellis/helloworld
            repo=https://github.com/pritechpr/helloworld-itrellis.git

        - name: Run/restart docker compose
          docker_compose: >
            project_src=/opt/itrellis/helloworld
            restarted=yes
  
        - name: check packages for updates
          shell: yum list updates | awk 'f;/Updated Packages/{f=1;}' | awk '{ print $1 }'
          changed_when: updates.stdout_lines | length > 0
          args:
            warn: false
          register: updates

        - name: display count
          debug:
            msg: "Found {{ updates.stdout_lines | length }} packages to be updated:\n\n{{ updates.stdout }}"

        - when: updates.stdout_lines | length > 0
          block:
            - name: install updates using yum
              yum:
                name: "*"
                state: latest

            - name: install yum-utils
              package:
                name: yum-utils

            - name: check if reboot is required
              shell: needs-restarting -r
              failed_when: false
              register: reboot_required
              changed_when: false

        - when: updates.stdout_lines | length > 0 and reboot_required.rc != 0
          block:
            - name: reboot the server if required
              shell: sleep 3; reboot
              ignore_errors: true
              changed_when: false
              async: 1
              poll: 0

            - name: wait for server to come back after reboot
              wait_for_connection:
                timeout: 600
                delay: 20
              register: reboot_result

            - name: reboot time
              debug:
                msg: "The system rebooted in {{ reboot_result.elapsed }} seconds."
        

